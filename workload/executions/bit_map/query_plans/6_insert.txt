Plan hash value: 604047669
 
------------------------------------------------------------------------------------------------------------------------
| Id  | Operation                                  | Name                      | Rows  | Bytes | Cost (%CPU)| Time     |
------------------------------------------------------------------------------------------------------------------------
|   0 | INSERT STATEMENT                           |                           |   122K|  5601K| 25395   (1)| 00:00:01 |
|   1 |  LOAD TABLE CONVENTIONAL                   | WORKPLACE                 |       |       |            |          |
|*  2 |   HASH JOIN                                |                           |   122K|  5601K| 25395   (1)| 00:00:01 |
|   3 |    TABLE ACCESS FULL                       | ACCOUNT_BUILDING          |  1000 |  8000 |     3   (0)| 00:00:01 |
|   4 |    VIEW                                    | VW_JF_SET$FD924913        | 61020 |  2324K| 25391   (1)| 00:00:01 |
|   5 |     UNION-ALL                              |                           |       |       |            |          |
|*  6 |      HASH JOIN                             |                           | 60855 |  2555K| 24719   (1)| 00:00:01 |
|   7 |       TABLE ACCESS FULL                    | ROOM                      | 50000 |   439K|   171   (1)| 00:00:01 |
|*  8 |       HASH JOIN                            |                           | 60855 |  2020K| 24547   (1)| 00:00:01 |
|*  9 |        HASH JOIN                           |                           | 26827 |   550K| 23531   (1)| 00:00:01 |
|* 10 |         TABLE ACCESS FULL                  | CPU                       | 26828 |   209K|  2752   (1)| 00:00:01 |
|  11 |         TABLE ACCESS BY INDEX ROWID BATCHED| COMPUTER                  | 39399 |   500K| 20778   (1)| 00:00:01 |
|  12 |          BITMAP CONVERSION TO ROWIDS       |                           |       |       |            |          |
|* 13 |           BITMAP INDEX RANGE SCAN          | COMPUTER_HDD_MEMORY_INDEX |       |       |            |          |
|* 14 |        TABLE ACCESS FULL                   | RAM_STICK                 |   999K|    12M|  1009   (2)| 00:00:01 |
|  15 |      NESTED LOOPS                          |                           |   165 |  6105 |   673   (1)| 00:00:01 |
|  16 |       NESTED LOOPS                         |                           |   165 |  5280 |   508   (1)| 00:00:01 |
|  17 |        NESTED LOOPS                        |                           |   167 |  3841 |   342   (0)| 00:00:01 |
|* 18 |         TABLE ACCESS BY INDEX ROWID BATCHED| RAM_STICK                 |   167 |  2171 |     8   (0)| 00:00:01 |
|* 19 |          INDEX RANGE SCAN                  | SYS_C008874               |  1000 |       |     4   (0)| 00:00:01 |
|  20 |         TABLE ACCESS BY INDEX ROWID        | COMPUTER                  |     1 |    10 |     2   (0)| 00:00:01 |
|* 21 |          INDEX UNIQUE SCAN                 | SYS_C008860               |     1 |       |     1   (0)| 00:00:01 |
|  22 |        TABLE ACCESS BY INDEX ROWID         | ROOM                      |     1 |     9 |     1   (0)| 00:00:01 |
|* 23 |         INDEX UNIQUE SCAN                  | SYS_C008856               |     1 |       |     0   (0)| 00:00:01 |
|* 24 |       INDEX UNIQUE SCAN                    | SYS_C008869               |     1 |     5 |     1   (0)| 00:00:01 |
------------------------------------------------------------------------------------------------------------------------
 
Predicate Information (identified by operation id):
---------------------------------------------------
 
   2 - access("ITEM_1"="AC"."BUILDING_ID")
   6 - access("CP"."ROOM_ID"="R"."ROOM_ID")
   8 - access("CP"."COMPUTER_ID"="RS"."COMPUTER_ID")
   9 - access("CP"."COMPUTER_ID"="C"."CPU_ID")
  10 - filter("C"."MEMORY"<2)
  13 - access("CP"."HDD_MEMORY"<3000)
       filter("CP"."HDD_MEMORY"<3000)
  14 - filter(LNNVL("RS"."RAM_STICK_ID"<1000) OR LNNVL("RS"."MEMORY"<4))
  18 - filter("RS"."MEMORY"<4)
  19 - access("RS"."RAM_STICK_ID"<1000)
  21 - access("CP"."COMPUTER_ID"="RS"."COMPUTER_ID")
  23 - access("CP"."ROOM_ID"="R"."ROOM_ID")
  24 - access("CP"."COMPUTER_ID"="C"."CPU_ID")
 
Note
-----
   - this is an adaptive plan
